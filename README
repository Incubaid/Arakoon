Arakoon: a simple distributed key/value store with preference for consistency.
It's an ocaml based multi-paxos implementation on top of Tokyo Cabinet.

Compiling: see COMPILING

License information: 
  GNU AFFERO GENERAL PUBLIC LICENSE
  (for the full license text, see COPYING)

Libraries we use: see LIBRARIES
  

Releases:
  - The 1.X.Y branches are releases that passed our system test suite.
  - The 1.X branches are development branches so might be less stable
 
Documentation:
  www.arakoon.org

For the impatient:

RUNNING A SINGLE NODE DEMO SERVER

You need a config file, like this one

$> cat single.ini
[global]
cluster = arakoon_0 
cluster_id = ricky

[arakoon_0]
ip = 127.0.0.1
client_port = 4000
messaging_port = 4010
home = /tmp
log_level = info  

Debug sections:

Current logging sections are: paxos,client_protocl,tcp_messaging. 
Environment variable LWT_LOG='paxos -> info;client_protocl ->debug; * -> error' can help to choose the desired level for each section.All sections are initialzed by default to debug.

Start the node:

$> ./arakoon.native -config single.ini --node arakoon_0

This starts a single node cluster for you to play with.

You can get/set values from the command line using :
$> ./arakoon.native -config examples/single.ini --set hello world  
$> ./arakoon.native -config examples/single.ini --get hello
"world"

to get an overview of what else the command line provides.
./arakoon.native --help

Of course you want to use Arakoon from within a program. 
For this reason, we provide OCaml, C, Python, and Php clients.

have fun,

The arakoon team



